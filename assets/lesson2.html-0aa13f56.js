import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,d as e}from"./app-434ca933.js";const t={},l=e(`<h1 id="enumeraciok" tabindex="-1"><a class="header-anchor" href="#enumeraciok" aria-hidden="true">#</a> Enumerációk</h1><div class="hint-container note"><p class="hint-container-title">Röviden</p><ul><li>Egy enumeráció egy egyéni típus, amely felsorolja az értékek halmazát.</li><li>Az enumerációkat a többi metódus után, vagy egy külön fájlban határozzuk meg.</li><li>Az enumeráció meghatározása után használhatja azt egy változó típusaként.</li></ul></div><p>A <strong>C#</strong> nyelvben a típusok számítanak. Nem használunk <code>string</code>-et, ha számokkal dolgozunk, és nem használunk <code>int</code>-et, ha szöveggel dolgozunk. Mit tegyünk, ha olyasmivel találkozunk, ami nem illik bele valamelyik már létező típusba? Mi van például, ha az évszakokat (<strong>tavasz, nyár, ősz, tél</strong>) kell ábrázolnunk?</p><p>Ha csak olyan adattípusokat használunk, amelyeket már ismerünk, két lehetőségünk van:</p><ol><li><p>Egész szám <code>int</code> típus:</p><p>Egy int típus esetén minden évszakhoz hozzárendelhetnénk egy számot:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> current <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// summer</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>és</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Winter is coming.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ez a megközelítés működhet, de két problémával jár:</p><ul><li>Először is, nehéz megjegyezni, hogy melyik évszak melyik. A téllel vagy a tavasszal kezdtük? 0-nál vagy 1-nél kezdjük a számolást? Csak a megjegyzéssel válik világossá.</li><li>A második probléma az, hogy semmi sem akadályozza meg, hogy más számokat használjunk. Valaki az aktuális évszakot -14 vagy 2 millióra teheti.</li></ul></li><li><p>Karakterlánc <code>string</code> típus:</p><p>Mi lenne, ha <code>string</code>-eket használnánk? Használhatnánk a <strong>Summer</strong> szöveget a nyár ábrázolására:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> current <span class="token operator">=</span> <span class="token string">&quot;Summer&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>és</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token string">&quot;Fall&quot;</span><span class="token punctuation">)</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Winter is coming.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ez a megközelítés hasonló problémákkal jár. <strong>fall</strong>, <strong>Faall</strong> és az <strong>Autumn</strong> nem jelentik ugyanazt a karakterláncot. És semmi sem akadályoz meg minket abban, hogy valami olyasmit tegyünk, mint <code>current = &quot;Monday&quot;;</code>.</p></li></ol><p>A C# jobb megoldást kínál erre a problémára egy új típus, az úgynevezett <strong>enumeráció</strong> definiálását.</p><h2 id="enumeracio-alapjai" tabindex="-1"><a class="header-anchor" href="#enumeracio-alapjai" aria-hidden="true">#</a> Enumeráció alapjai</h2><p>Az enumeráció olyan típus, amely választási lehetőségek a lehetséges opciók egy kis listájából állnak.</p><div class="hint-container note"><p class="hint-container-title">Az enumerálni ige azt jelenti, hogy “felsorolni a dolgokat egyenként”, innen ered a neve.</p></div><p>Az enumerációk csak akkor működnek, ha viszonylag kevés választási lehetőségünk van. Például a <code>Boolean</code> értékek <code>true</code> és <code>false</code> kiváló enumeráció lenne, ha nem lennének már a <code>bool</code> típus részei. Az <strong>évszakok</strong> is kiválóan alkalmasak enumerációra, mivel mindössze négy választási lehetőségünk van.</p><h3 id="enumeracio-definialasa" tabindex="-1"><a class="header-anchor" href="#enumeracio-definialasa" aria-hidden="true">#</a> Enumeráció definiálása</h3><p>Mielőtt használhatnánk egy enumerációt, definiálnunk kell azt. A következőkben egy új enumerációt definiálunk az évszakok ábrázolására:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">enum</span> <span class="token class-name">Season</span> <span class="token punctuation">{</span> Spring<span class="token punctuation">,</span> Summer<span class="token punctuation">,</span> Fall<span class="token punctuation">,</span> Winter <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Egy új enumeráció definiálásához az <code>enum</code> kulcsszóval kell kezdenünk, amit az enumeráció neve (<code>Season</code>) követ. A kapcsos zárójelek között, vesszővel elválasztva felsoroljuk az enumeráció lehetőségeit. A C#-ban általában a típusnevekhez és az enumeráció tagjaihoz is az <strong>UpperCamelCase</strong> elnevezési konvenciót alkalmazzák.</p><p>A kód többi részébe helyezve az egész fájl így nézhet ki:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span>
<span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token class-name">Season</span> <span class="token punctuation">{</span> Spring<span class="token punctuation">,</span> Summer<span class="token punctuation">,</span> Fall<span class="token punctuation">,</span> Winter <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span>WriteLine <span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A szóköz nem számít, így a következő használati stílus is jellemző:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">enum</span> <span class="token class-name">Season</span> 
<span class="token punctuation">{</span> 
    Spring<span class="token punctuation">,</span>  
    Summer<span class="token punctuation">,</span> 
    Fall<span class="token punctuation">,</span>
    Winter 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Az enumeráció első eleme lesz az alapértelmezett értéke, ezért ezt jól válasszuk meg.</p><h3 id="enumeracio-hasznalata" tabindex="-1"><a class="header-anchor" href="#enumeracio-hasznalata" aria-hidden="true">#</a> Enumeráció használata</h3><p>Miután definiáltuk a <code>Season</code> enumerációt, használhatjuk, mint bármely más típust. Például deklarálhatunk egy változót, amelynek típusa <code>Season</code>:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Season</span> current<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A fordító most már képes segíteni abban, hogy csak érvényes évszakokat rendeljünk hozzá ehez a változóhoz. Megadhatunk egy konkrét értéket, például így:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name">Season</span> current <span class="token operator">=</span> Season<span class="token punctuation">.</span>Summer<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Egy adott értéket az enumerációtípus neve és a pont operátor segítségével érünk el. Ez kissé bonyolultabb, mint például ha <strong>int</strong> (<code>2</code>) vagy <strong>string</strong> (<code>Summer</code>) literálokat használtunk volna, de nem rossz.</p><p>Az enumerációk és az egész számok sok közös tulajdonsággal rendelkeznek. Például az <code>==</code> operátort használhatjuk az egyenlőség ellenőrzésére:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span>
<span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token class-name">Season</span> <span class="token punctuation">{</span>Spring<span class="token punctuation">,</span> Summer<span class="token punctuation">,</span> Fall<span class="token punctuation">,</span> Winter <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Season</span> current <span class="token operator">=</span> Season<span class="token punctuation">.</span>Summer<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> Season<span class="token punctuation">.</span>Summer <span class="token operator">||</span> current <span class="token operator">==</span> Season<span class="token punctuation">.</span>Winter<span class="token punctuation">)</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Happy solstice!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Happy equinox!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="a-consolecolor-ujboli-megtekintese" tabindex="-1"><a class="header-anchor" href="#a-consolecolor-ujboli-megtekintese" aria-hidden="true">#</a> A <code>ConsoleColor</code> újboli megtekintése</h2><p>A múltban így használtuk a <code>ConsoleColor</code> típust:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span>BackgroundColor <span class="token operator">=</span> ConsoleColor<span class="token punctuation">.</span>Yellow<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Most már ez a kód új értelmet nyer. A <code>ConsoleColor</code> egy <strong>enumeráció</strong>! Valahol ott van ez a kód, például <code>enum ConsoleColor { Black, Yellow, Red, ... }</code>. Az enumerációk ismeretével mi magunk is megírhattuk volna ezt!</p><h2 id="enumeraciok-sotet-titka" tabindex="-1"><a class="header-anchor" href="#enumeraciok-sotet-titka" aria-hidden="true">#</a> Enumerációk sötét titka</h2><p>Az enumerációk tulajdonképpen egész számokat reprezentálnak. Azonban a fordítóprogram kizárja annak lehetőségét, hogy véletlenül alkalmazzuk őket. Minden enumerációnak van egy alaptípusa, ami az egész szám típuson alapul. Az alapértelmezett alaptípus az <code>int</code>, de lehetőség van annak módosítására:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">enum</span> <span class="token class-name">Season</span><span class="token punctuation">:</span> <span class="token type-list"><span class="token keyword">byte</span></span> <span class="token punctuation">{</span>Spring<span class="token punctuation">,</span> Summer<span class="token punctuation">,</span> Fall<span class="token punctuation">,</span> Winter <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Nem éri meg ezt megváltoztatni, de érdemes megfontolni, ha szűkös a memória.</p><p>Mivel az enumerációk egész számokon alapulnak, van néhány más trükk is, amit hasznosnak találhatunk. Minden enumerációs taghoz <code>int</code> értéket rendelünk. Ezek alapértelmezés szerint a definícióban szereplő sorrendben, 0-val kezdődően kerülnek megadásra. Tehát fentebb a <em>Spring</em> <strong>0</strong>, a <em>Summer</em> <strong>1</strong>, stb. Ha szeretnénk akár egyéni számokat is hozzárendelhetünk:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">enum</span> <span class="token class-name">Season</span> <span class="token punctuation">{</span> Spring <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> Summer <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> Fall <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span> Winter <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Minden olyan enumerációs tag, amelyhez nincs hozzárendelt szám, automatikusan az előtte lévő tag utáni számot kapja. Az alábbiakban tehát a <em>Spring az 1</em>, <em>a Summer a 2</em>, <em>a Fall a 3</em>, <em>a Winter pedig a 4</em>:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">enum</span> <span class="token class-name">Season</span> <span class="token punctuation">{</span> Spring <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Summer<span class="token punctuation">,</span> Fall<span class="token punctuation">,</span> Winter<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Lehetőségünk van egész számok és enumerációk között is átalakítani:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> number <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> Season<span class="token punctuation">.</span>Fall<span class="token punctuation">;</span> 
<span class="token class-name">Season</span> now <span class="token operator">=</span> <span class="token punctuation">(</span>Season<span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,41),o=[l];function p(i,c){return a(),s("div",null,o)}const d=n(t,[["render",p],["__file","lesson2.html.vue"]]);export{d as default};
