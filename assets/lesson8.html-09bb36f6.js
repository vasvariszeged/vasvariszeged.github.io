import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as a,d as s}from"./app-434ca933.js";const t={},o=s(`<h1 id="null-referenciak" tabindex="-1"><a class="header-anchor" href="#null-referenciak" aria-hidden="true">#</a> null referenci√°k</h1><div class="hint-container note"><p class="hint-container-title">R√∂viden</p><ul><li>A t√≠pusok tartalmazhatnak olyan referenci√°kat, amely semmire sem mutatnak: <code>null</code>, ami egy objektum hi√°ny√°t jelenti.</li></ul></div><p>A referencia t√≠pus√∫ v√°ltoz√≥k, p√©ld√°ul a <code>string</code>-ek, a t√∂mb√∂k (<code>array</code>-ek) √©s az oszt√°lyok (<code>class</code>-ok) nem t√°rolj√°k az adatokat k√∂zvetlen√ºl a v√°ltoz√≥kban. A legt√∂bbsz√∂r ezek a referenci√°k egy adott objektumra mutatnak, de n√©h√°ny esetben az √©rt√©k hi√°ny√°t jelz≈ë referenci√°k. Ezt <code>null</code>-referenci√°nak nevezz√ºk. A k√≥dban a <code>null</code> referenci√°t a <code>null</code> kulcssz√≥val haszn√°lhatjuk:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A <code>null</code> referencia akkor hasznos ha el≈ëfordulhat olyan, hogy nem √°ll rendelkez√©s√ºnkre adat.</p><div class="hint-container tip"><p class="hint-container-title">K√©pzelj√ºnk el egy j√°t√©kot</p><p>Amelyben egy olyan karaktert ir√°ny√≠tunk, aki be tud √ºllni egy j√°rm≈±be √©s vezetni tudja azt. A j√°rm≈±nek lehet egy <code>Character driver;</code> mez≈ëje, amely megmutatja, hogy √©ppen melyik karakter √ºl vezet≈ë√ºl√©sben. Ett≈ël f√ºggetlen√ºl a vezet≈ë√ºl√©s lehet, hogy √ºres, amit √∫gy lehet √°br√°zolni, hogy a <code>driver</code> egy <code>null</code> referenci√°t tartalmaz. <code>null</code> <strong>a referencia t√≠pusok alap√©rtelmezett √©rt√©ke.</strong></p></div><p>A <code>null</code> √©rt√©kek haszn√°lata azonban nem marad k√∂vetkezm√©nyek n√©lk√ºl. N√©zz√ºk meg ezt a k√≥dot:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Ez a k√≥d √∂sszeomlik, mert egy nem l√©tez≈ë karakterl√°nc hossz√°t pr√≥b√°lja lek√©rdezni. Ezt a hib√°t k√∂nny≈± √©szrevenni, mivel a <code>name</code> mindig <code>null;</code> m√°s helyzetekben kev√©sb√© nyilv√°nval√≥:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> name <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Visszat√©rhet null-al!</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Vajon a <code>ReadLine()</code> karakterl√°ncot adott vissza nek√ºnk, vagy <code>null</code> √©rt√©ket?</strong> Val√≥sz√≠n≈±leg m√©g nem tal√°lkoztunk vele, de bizonyos helyzetekben el≈ëfordulhat, hogy a <code>ReadLine()</code> <code>null</code> √©rt√©ket ad vissza. (<em>Pr√≥b√°ljuk meg a <strong>Ctrl + Z</strong> billenty≈±kombin√°ci√≥t megnyomni, amikor a sz√°m√≠t√≥g√©p arra v√°r, hogy valamit be√≠rjunk.</em>) A lehet≈ës√©g, hogy <code>null</code> lehet, arra k√©nyszer√≠t minket, hogy √≥vatosan haszn√°ljuk.</p><h2 id="null-vagy-nem-null" tabindex="-1"><a class="header-anchor" href="#null-vagy-nem-null" aria-hidden="true">#</a> <code>null</code> vagy nem <code>null</code>?</h2><p>Amikor referencia t√≠pus√∫ v√°ltoz√≥kr√≥l van sz√≥, √©rdemes meg√°llni egy pillanatra √©s √°tgondolni, hogy a <code>null</code> √©rt√©k lehet≈ës√©ges legyen-e?!</p><p>N√©h√°ny m√≥dszert fogunk l√°tni a <code>null</code> √©rt√©k ellen≈ërz√©s√©re r√∂videsen:</p><ul><li><p>Abban az esetben ha a <code>null</code> √©rt√©k megengedett, √©rdemes ellen≈ërizni a <code>null</code> √©rt√©ket, miel≈ëtt haszn√°ln√°nk azokat a tagokat (<em>met√≥dusokat</em>, <em>tulajdons√°gokat</em>, <em>mez≈ëket</em>, stb.).</p></li><li><p>Abban az esetben ha a <code>null</code> √©rt√©k nem megengedett, ellen≈ërizn√ºnk kell az √∂sszes √©rt√©ket, amit hozz√°rendel√ºnk, hogy biztosak legy√ºnk abban, hogy v√©letlen√ºl sem rendel√ºnk <code>null</code> √©rt√©ket hozz√°.</p></li></ul><p>Miut√°n eld√∂nt√∂tt√ºk, hogy egy v√°ltoz√≥nak megengedj√ºk-e a <code>null</code> √©rt√©ket, ezt a d√∂nt√©st jelezni akarjuk a k√≥dunkban. B√°rmely referencia-t√≠pus√∫ v√°ltoz√≥ v√©g√©n lehet egy <code>?</code> vagy nem. Az <code>?</code> azt jelenti, hogy tartalmazhat <code>null</code> √©rt√©ket.</p><p>P√©ld√°ul:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> name <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Visszat√©rhet null-al!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A fenti k√≥dban a <code>name</code> t√≠pusa most <code>string?</code>, ami azt jelzi, hogy b√°rmilyen √©rv√©nyes <code>string</code> p√©ld√°nyt tartalmazhat, de lehet <code>null</code> is. A <code>?</code> n√©lk√ºl, ahogy eddig is haszn√°ltuk azt mondja meg, hogy a <code>null</code> nem opci√≥.</p><p>Eddig figyelmen k√≠v√ºl hagytuk a <code>null</code> lehet≈ës√©g√©t, s≈ët eddig probl√©ma n√©lk√ºl meg√∫sztuk. Az √∂sszes eddig l√°tott k√≥dunkban az egyetlen val√≥s vesz√©lyt az jelentette, hogy a <code>Console.ReadLine();</code> <code>null</code> √©rt√©ket adhatott volna vissza √©s ezt nem kezelt√ºk.</p><div class="hint-container info"><p class="hint-container-title">Viszont eddig...</p><p>nem nyomtuk meg a <strong>Ctrl + Z</strong> billenty≈±kombin√°ci√≥t, √≠gy ez a probl√©ma nem mer√ºlt fel. üòÑ</p></div><p>M√©g ha el≈ë is j√∂tt volna, √°ltal√°ban a bemenetet vagy k√∂zvetlen√ºl megjelen√≠tett√ºk vagy m√°s t√≠pusba konvert√°ltuk √©s mind a <code>Console.WriteLine();</code>, mind a <code>Convert.ToInt32();</code> (<em>√©s a t√∂bbi met√≥dus</em>) biztons√°gosan kezeli le a <code>null</code> √©rt√©ket.</p><p>De mostant√≥l kezdve sokkal nagyobb val√≥sz√≠n≈±s√©ggel tal√°lkozunk <code>null</code>-al kapcsolatos probl√©m√°kkal, ez√©rt itt az ideje, hogy √≥vatosabbak legy√ºnk √©s minden egyes referencia-t√≠pus√∫ v√°ltoz√≥ eset√©ben sz√°nd√©kosan d√∂nts√ºnk arr√≥l, hogy a <code>null</code> megengedett-e vagy sem.</p><p>Ha helyesen alkalmazzuk (<em>vagy kihagyjuk</em>) a <code>?</code>-t a v√°ltoz√≥inkra, akkor a ford√≠t√≥ seg√≠ts√©g√©t is ig√©nybe vehetj√ºk a <code>null</code> ellen≈ërz√©s√©hez. Ez a seg√≠ts√©g rendk√≠v√ºl hasznos. K√∂nnyen el≈ëfordulhat, hogy magunkt√≥l valamit kihagyunk. Ha a ford√≠t√≥ seg√≠t √©szrevenni a <code>null</code>-al kapcsolatos probl√©m√°kat, nem fogunk sokat kihagyni. A m√°sik el≈ënye term√©szetesen az, hogy a k√≥db√≥l egy√©rtelm≈±en kider√ºl, hogy a <code>null</code> √©rv√©nyes lehet≈ës√©g-e egy v√°ltoz√≥ra.</p><p>P√©ld√°inkban eddig csak <code>string</code>-eket haszn√°ltunk, de ez minden hivatkoz√°si t√≠pusra vonatkozik, bele√©rtve a t√∂mb√∂ket √©s b√°rmilyen √°ltalunk k√©sz√≠tett oszt√°lyt is. Hasonl√≥t tehetn√©nk a <code>Score</code> √©s <code>Rectangle</code> oszt√°lyaink haszn√°lat√°ra is.</p><h2 id="null-ellenorzese" tabindex="-1"><a class="header-anchor" href="#null-ellenorzese" aria-hidden="true">#</a> <code>null</code> ellen≈ërz√©se</h2><p>Gyakran sz√ºks√©g lesz arra, hogy ellen≈ërizz√ºk, hogy <code>null</code> √©rt√©k-e az adott referencia. A <code>null</code> √©rt√©k ellen≈ërz√©s√©nek mechanizmusa egyszer≈±. A legegyszer≈±bb m√≥dja annak, hogy ellen≈ërizz√ºk a <code>null</code> √©rt√©ket, az egy referencia √∂sszehasonl√≠t√°sa a <code>null</code> liter√°llal, ami egy <code>null</code> ellen≈ërz√©st jelent:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> name <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;The name is not null.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ha egy v√°ltoz√≥ azt jelzi, hogy a <code>null</code> √©rt√©k lehets√©ges lehet≈ës√©g, akkor √©rdemes <code>null</code> ellen≈ërz√©st v√©gezni, miel≈ëtt haszn√°ln√°nk annak tagjait.</p><p>Fontos megjegyezni, hogy <strong>a ford√≠t√°s ut√°n nincs k√ºl√∂nbs√©g a <code>string?</code> √©s a <code>string</code> k√∂z√∂tt</strong>. Ha figyelmen k√≠v√ºl hagyjuk a ford√≠t√≥ √°ltal adott figyelmeztet√©seket, amelyek seg√≠tenek a helyes megold√°s megtal√°l√°s√°ban, m√©g egy egyszer≈± <code>string</code> (<em>a <code>?</code> n√©lk√ºl</em>) is technikailag tartalmazhat <code>null</code> √©rt√©ket.</p><h3 id="null-felteteles-operatorok-es" tabindex="-1"><a class="header-anchor" href="#null-felteteles-operatorok-es" aria-hidden="true">#</a> <code>null</code>-felt√©teles oper√°torok: <code>?.</code> √©s <code>?[]</code></h3><p>A <code>null</code>-ellen≈ërz√©ssel az egyik probl√©ma az, hogy a k√©s≈ëbbiekben k√∂vetkezm√©nyei lehetnek.</p><p>P√©ld√°ul:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> <span class="token function">GetTopPlayerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> scoreManager<span class="token punctuation">.</span><span class="token function">GetScores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>scoreManager</code> lehet <code>null</code>, a <code>GetScores()</code> <code>null</code>-√°t adhat vissza, vagy a t√∂mb tartalmazhat <code>null</code> hivatkoz√°st a 0 indexen. Ha ezek b√°rmelyike <code>null</code>, a program √∂sszeomlik. Minden egyes l√©p√©sn√©l ellen≈ërizn√ºnk kell:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> <span class="token function">GetTopPlayerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scoreManager <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">Score<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">?</span></span> scores <span class="token operator">=</span> scoreManager<span class="token punctuation">.</span><span class="token function">GetScores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
   
    <span class="token keyword">if</span> <span class="token punctuation">(</span>scores <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">Score<span class="token punctuation">?</span></span> topScore <span class="token operator">=</span> scores<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>topScore <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> topScore<span class="token punctuation">.</span>Name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A <code>null</code>-ellen≈ërz√©sek miatt a k√≥d nehezen olvashat√≥. Elfedik az l√©nyeges r√©szeket.</p><p>Van egy m√°sik lehet≈ës√©g is: a <strong>null-felt√©teles oper√°torok</strong>. A <code>?.</code> √©s <code>?[]</code> oper√°torokat alkalmazhatjuk a <code>.</code> √©s <code>[]</code> helyett, hogy egyszerre ellen≈ërizz√ºk a <code>null</code> √©rt√©ket √©s hozz√°f√©rj√ºnk a taghoz:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> <span class="token function">GetTopPlayerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> scoreManager<span class="token punctuation">?.</span><span class="token function">GetScores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">?.</span>Name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mind a <code>?.</code>, mind a <code>?[]</code> ki√©rt√©keli az el≈ëtte l√©v≈ë r√©szt, hogy kider√ºlj√∂n, <code>null</code>-e. Ha igen, akkor nem t√∂rt√©nik tov√°bbi ki√©rt√©kel√©s √©s az eg√©sz kifejez√©s <code>null</code>-√°ra √©rt√©kel≈ëdik. Ha nem <code>null</code>, akkor a ki√©rt√©kel√©s √∫gy folytat√≥dik, mintha egy norm√°l <code>.</code> vagy <code>[]</code> oper√°tor lett volna.</p><p>Ha a <code>scoreManager</code> <code>null</code>, akkor a fenti k√≥d <code>null</code> √©rt√©ket ad vissza an√©lk√ºl, hogy megh√≠vn√° a <code>GetScores</code> f√ºggv√©nyt. Ha a <code>GetScores()</code> <code>null</code> √©rt√©ket ad vissza, akkor a fenti k√≥d <code>null</code> √©rt√©ket ad vissza an√©lk√ºl, hogy hozz√°f√©rne az 0. indexhez.</p><p>Ezek az oper√°torok nem fednek le minden null√°val kapcsolatos forgat√≥k√∂nyvet - <em>n√©ha sz√ºks√©g lesz a j√≥ √∂reg <code>if (x == null)</code>-ra -</em>, de sok esetben megold√°st jelenthetnek.</p><h3 id="a-null-osszefoglalo-operator" tabindex="-1"><a class="header-anchor" href="#a-null-osszefoglalo-operator" aria-hidden="true">#</a> A <code>null</code>-√∂sszefoglal√≥ oper√°tor: <code>??</code></h3><p>A null-√∂sszefoglal√≥ oper√°tor (<code>??</code>) - <em>coalescing operator</em> - szint√©n hasznos eszk√∂z. Egy olyan kifejez√©st vesz, amely <code>null</code> lehet √©s egy olyan √©rt√©ket vagy kifejez√©st ad meg, amelyet helyettes√≠t≈ë √©rt√©kk√©nt haszn√°lhatunk, ha <code>null</code>:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetTopPlayerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// T√∂bb√© nem kell megengedni a null -t.</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> scoreManager<span class="token punctuation">?.</span><span class="token function">GetScores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">?.</span>Name <span class="token operator">??</span> <span class="token string">&quot;(not found)&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ha a <code>??</code> el≈ëtti k√≥d null√°ra √©rt√©kel≈ëdik, akkor a <code>&quot;(not found)&quot;</code> √©rt√©k√©t fogja haszn√°lni helyette.<br> Erre is van egy √∂sszetett hozz√°rendel√©si oper√°tor:</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetTopPlayerName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> name <span class="token operator">=</span> scoreManager<span class="token punctuation">?.</span><span class="token function">GetScores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">?</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">?.</span>Name<span class="token punctuation">;</span>
    
    name <span class="token operator">??=</span> <span class="token string">&quot;(not found)&quot;</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> name<span class="token punctuation">;</span> <span class="token comment">// Nincs ford√≠t√≥i figyelmeztet√©s. A \`??=\` biztos√≠tja, hogy val√≥s √©rt√©ket kapjunk.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="a-null-t-megengedo-operator" tabindex="-1"><a class="header-anchor" href="#a-null-t-megengedo-operator" aria-hidden="true">#</a> A <code>null</code>-t megenged≈ë oper√°tor: <code>!</code></h3><p>A ford√≠t√≥ igen alaposan elemzi, hogy mi lehet √©s mi nem lehet <code>null</code> √©s megfelel≈ë figyelmeztet√©seket ad nek√ºnk. Hogy megszabaduljunk a ford√≠t√≥i figyelmeztet√©st≈ël, haszn√°lhatjuk a null-megenged≈ë oper√°tort: <code>!</code>. Ez az oper√°tor azt mondja a ford√≠t√≥nak: <strong>&quot;Tudom, hogy ez potenci√°lis <code>null</code> probl√©m√°nak t≈±nik, de nem lesz az. B√≠zz bennem!&quot;</strong></p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> nullableString <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> nonNullableString <span class="token operator">=</span> nullableString<span class="token operator">!</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Ebben a p√©ld√°ban a <code>nullableString</code> v√°ltoz√≥ <code>null</code> √©rt√©ket kap. A <code>nonNullableString</code> v√°ltoz√≥ azonban a <code>null</code>-t megenged≈ë oper√°tor (<code>!</code>) seg√≠ts√©g√©vel kijelenti, hogy biztosak vagyunk benne, hogy a <code>nullableString</code> v√°ltoz√≥ nem lesz <code>null</code>. Ez lehet≈ëv√© teszi a ford√≠t√≥nak, hogy √°tmenetileg figyelmen k√≠v√ºl hagyja a <code>null</code> hib√°kat √©s enged√©lyezze a k√≥dnak, hogy futtat√≥djon.</p><p>Legyen√ºnk √≥vatosak a haszn√°lat√°val, mert ha a v√°ltoz√≥ m√©gis <code>null</code> √©rt√©ket kap, fut√°si id≈ëben hib√°t fog dobni.</p>`,52),l=[o];function c(p,i){return e(),a("div",null,l)}const u=n(t,[["render",c],["__file","lesson8.html.vue"]]);export{u as default};
